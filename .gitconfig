[core]
    editor = nano
    whitespace = trailing-space,space-before-tab
    autocrlf = false
    ignorecase = true
    excludesfile = ~/.gitignore

[color]
    ui = auto
  [color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
  [color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
  [color "status"]
    added = yellow
    changed = green
    untracked = cyan

[alias]
    status = status -bs
    s  = status --short
    st = status -sb
    ci = commit
    br = branch
    brt = for-each-ref --sort=committerdate refs/heads/ --format='%(committerdate:short) %(refname:short)'
    co = checkout
    df = diff
    dc = diff --cached
    lg = log -p
    lall = log --graph --decorate --pretty=oneline --abbrev-commit --first-parent
    lalla = log --graph --decorate --pretty=oneline --abbrev-commit --all --first-parent
    lol = log --graph --pretty=format:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --first-parent
    lola = log --graph --pretty=format:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --all --first-parent
    ls = ls-files
    wip = commit -am wip
    unwip = !bash -c '[[ "`git log --pretty=%s -n 1`" == "wip" ]] && git reset HEAD^'
    cleanup = !git branch --merged master | grep -v 'master$' | xargs git branch -d
    track = "!git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`"
    
    # These only work from the project root
    last-commit = rev-list -1 HEAD
    fixup = !bash -c 'git commit --fixup "`git last-commit $1`"' -
    add-fixup = !bash -c 'git add "$1" && git fixup "$1"' -
    af = !git add-fixup

    # Find branch's branching-off point (http://stackoverflow.com/questions/1527234/finding-a-branch-point-with-git)
    oldest-ancestor = !bash -c 'diff --old-line-format='' --new-line-format='' <(git rev-list --first-parent "${1:-origin/master}") <(git rev-list --first-parent "${2:-HEAD}") | head -1' -
    bdiff = !bash -c \"git diff `git oldest-ancestor`.. $@\"
    blog = !bash -c \"git log `git oldest-ancestor`.. --oneline $@\"

    # Show files ignored by git:
    ign = ls-files -o -i --exclude-standard

[grep]
    extendRegexp = true
    lineNumber = true

[difftool]
    prompt = false
        tool = meld

[difftool "meld"]
    cmd = meld \"$LOCAL\" \"$REMOTE\"
[push]
    default = current
[diff]
    tool = meld
[rerere]
    enabled = true
[merge]
    conflictstyle = diff3
    ff = only
[rebase]
    autosquash = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
